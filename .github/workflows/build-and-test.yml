name: Gradle Build And Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant permissions
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew assemble -x test

  unit-tests:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          files: |
            build/test-results/test/*.xml

  package-jvm:
    name: Package Docker JVM
    needs: unit-tests
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build Without Tests
        run: ./gradlew build -x test -x check

      - name: Create Docker Image
        run: docker build -f src/main/docker/Dockerfile.jvm -t quarkus/demo-for-ci-jvm --label "runnumber=${GITHUB_RUN_ID}" .

      - name: Log in GitHub registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        id: push_image
        run: |
          IMAGE_NAME=quarkus/demo-for-ci-jvm
          VERSION=ga-latest
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo "name=$IMAGE_ID:$VERSION" >> $GITHUB_OUTPUT

      - name: Login to AWS ECR
        id: ecr
        uses: elgohr/ecr-login-action@v3
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: quarkus/demo-for-ci-jvm
          username: ${{ steps.ecr.outputs.username }}
          password: ${{ steps.ecr.outputs.password }}
          registry: ${{ steps.ecr.outputs.registry }}
          dockerfile: src/main/docker/Dockerfile.jvm
          tags: "ga-latest"
